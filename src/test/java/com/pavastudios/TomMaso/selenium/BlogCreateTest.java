package com.pavastudios.TomMaso.selenium;// Generated by Selenium IDE

import org.junit.jupiter.api.*;
import org.openqa.selenium.*;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import java.time.Duration;
import java.util.List;


@TestMethodOrder(MethodOrderer.OrderAnnotation.class)
public class BlogCreateTest extends SeleniumTest{
    public static final String BLOG_TO_CREATE="tests_blogs";

    @BeforeAll
    public static void setUp() {
        Utility.login(driver, "tester_account1","12345678");
    }

    @Test
    @Order(1)
    public void createBlog() {
        driver.get("http://localhost:8080/TomMaso_war_exploded/blog-manage/"+BLOG_TO_CREATE);
        WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(10));
        wait.until(ExpectedConditions.titleIs("Errore - TomMASO"));
        driver.get("http://localhost:8080/TomMaso_war_exploded/profile");
        driver.manage().window().setSize(new Dimension(1000, 916));
        driver.findElement(By.cssSelector(".fa-plus > path")).click();
        driver.findElement(By.id("blognameNavbar")).click();
        driver.findElement(By.id("blognameNavbar")).sendKeys(BLOG_TO_CREATE);
        driver.findElement(By.id("createBlogNavbar")).click();
        driver.get("http://localhost:8080/TomMaso_war_exploded/blog-manage/"+BLOG_TO_CREATE);
        wait = new WebDriverWait(driver, Duration.ofSeconds(10));
        wait.until(ExpectedConditions.titleIs("Gestione Blog - TomMASO"));
    }

    @Test
    @Order(2)
    public void createBlogWrongName() {
        driver.get("http://localhost:8080/TomMaso_war_exploded/profile");
        driver.manage().window().setSize(new Dimension(1000, 916));
        driver.findElement(By.cssSelector(".fa-plus > path")).click();
        driver.findElement(By.id("blognameNavbar")).click();
        driver.findElement(By.id("blognameNavbar")).clear();
        driver.findElement(By.id("blognameNavbar")).sendKeys("aaaaaaa");
        driver.findElement(By.id("createBlogNavbar")).click();
        {
            List<WebElement> elements = driver.findElements(By.cssSelector("#createBlogModalNavbar .text-danger"));
            assert (elements.size() > 0);
        }
        {
            WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(10));
            wait.until(ExpectedConditions.invisibilityOfElementLocated(By.cssSelector("#createBlogModalNavbar .text-danger")));
        }
        driver.findElement(By.id("blognameNavbar")).clear();
        driver.findElement(By.id("blognameNavbar")).sendKeys("aaaaaaaaaaaaaaaaaaaaa");
        driver.findElement(By.id("createBlogNavbar")).click();
        {
            List<WebElement> elements = driver.findElements(By.cssSelector("#createBlogModalNavbar .text-danger"));
            assert (elements.size() > 0);
        }
        {
            WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(10));
            wait.until(ExpectedConditions.invisibilityOfElementLocated(By.cssSelector("#createBlogModalNavbar .text-danger")));
        }
        driver.findElement(By.id("blognameNavbar")).clear();
        driver.findElement(By.id("blognameNavbar")).sendKeys(BLOG_TO_CREATE);
        driver.findElement(By.id("createBlogNavbar")).click();
        {
            List<WebElement> elements = driver.findElements(By.cssSelector("#createBlogModalNavbar .text-danger"));
            assert (elements.size() > 0);
        }
        {
            WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(10));
            wait.until(ExpectedConditions.invisibilityOfElementLocated(By.cssSelector("#createBlogModalNavbar .text-danger")));
        }
    }

    @Test
    @Order(3)
    public void deleteBlog() {
        driver.get("http://localhost:8080/TomMaso_war_exploded/profile");
        driver.manage().window().setSize(new Dimension(1000, 916));
        {
            List<WebElement> elements = driver.findElements(By.cssSelector(".fa-trash"));
            assert (elements.size() > 0);
        }
        driver.findElement(By.cssSelector(".fa-trash")).click();
        driver.findElement(By.id("confirm-delete")).click();
        driver.findElement(By.cssSelector(".py-5:nth-child(1)")).click();
        {
            List<WebElement> elements = driver.findElements(By.cssSelector(".fa-trash"));
            assert (elements.size() == 0);
        }
    }
}
